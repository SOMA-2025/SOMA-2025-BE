name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 모든 히스토리 가져오기

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Debug Git status
        run: |
          echo "===== Git Status ====="
          git status
          echo "===== Latest Commits ====="
          git log -n 5 --oneline

      - name: Debug project structure (BEFORE BUILD)
        run: |
          echo "===== Project Structure ====="
          find src -type f -name "*.java" | sort
          echo "===== Controller Files ====="
          find src -name "*Controller.java"
          echo "===== Store Files ====="
          find src -name "*Store*.java"
          echo "===== Controller Content ====="
          cat src/main/java/com/kuad/soma/controller/StoreController.java || echo "File not found"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Print Gradle version
        run: ./gradlew --version

      - name: Clean Gradle
        run: ./gradlew clean

      - name: Build with Gradle (verbose)
        run: ./gradlew build -x test --info

      - name: Verify JAR contents
        run: |
          echo "===== JAR File Size ====="
          ls -lh build/libs/SOMA-0.0.1-SNAPSHOT.jar
          echo "===== Checking JAR contents ====="
          jar tf build/libs/SOMA-0.0.1-SNAPSHOT.jar | grep -i controller
          jar tf build/libs/SOMA-0.0.1-SNAPSHOT.jar | grep -i store
          jar tf build/libs/SOMA-0.0.1-SNAPSHOT.jar | grep -i dto
          echo "===== All Class Files ====="
          jar tf build/libs/SOMA-0.0.1-SNAPSHOT.jar | grep "\.class$" | sort

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/SOMA-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/app"

      - name: Create application.properties on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat > /home/ubuntu/app/application.properties << 'EOL'
            spring.datasource.url=jdbc:mysql://${{ secrets.DB_HOST }}:3306/${{ secrets.DB_NAME }}
            spring.datasource.username=${{ secrets.DB_USERNAME }}
            spring.datasource.password=${{ secrets.DB_PASSWORD }}
            spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
            spring.jpa.hibernate.ddl-auto=update
            spring.jpa.show-sql=true
            spring.jpa.properties.hibernate.format_sql=true
            spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
            server.port=8080
            app.cors.allowed-origins=https://kuad-archive.com
            app.cors.allowed-methods=GET,POST,PUT,DELETE
            app.cors.allowed-headers=*
            app.cors.max-age=3600
            # DEBUG 매핑 로그 활성화
            logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=DEBUG
            EOL

      - name: Update deploy.sh on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat > /home/ubuntu/app/deploy.sh << 'EOF'
            #!/bin/bash
            set +e
            cd /home/ubuntu/app || exit 0
            if pgrep -f "java -jar" > /dev/null; then
              kill -15 $(pgrep -f "java -jar") >/dev/null 2>&1
              sleep 5
            fi
            nohup java -jar /home/ubuntu/app/SOMA-0.0.1-SNAPSHOT.jar \
              --spring.config.location=file:/home/ubuntu/app/application.properties > nohup.out 2>&1 &
            sleep 2
            exit 0
            EOF

      - name: Set execute permission on deploy.sh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: chmod +x /home/ubuntu/app/deploy.sh

      - name: Run deploy.sh on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: bash /home/ubuntu/app/deploy.sh || true

      - name: Wait for application startup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Waiting for application to start..."
            sleep 30
            echo "===== Checking running Java process ====="
            ps aux | grep java
            echo "===== Recent application log ====="
            tail -n 50 /home/ubuntu/app/nohup.out
            echo "===== Testing Store API ====="
            curl -i http://localhost:8080/api/store/teams
