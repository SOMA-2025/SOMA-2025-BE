name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/SOMA-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/app"

      - name: Create and configure application.properties
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cat > /home/ubuntu/app/application.properties << 'EOL'
            spring.datasource.url=jdbc:mysql://${{ secrets.DB_HOST }}:3306/${{ secrets.DB_NAME }}
            spring.datasource.username=${{ secrets.DB_USERNAME }}
            spring.datasource.password=${{ secrets.DB_PASSWORD }}
            spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
            spring.jpa.hibernate.ddl-auto=update
            spring.jpa.show-sql=true
            spring.jpa.properties.hibernate.format_sql=true
            spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
            server.port=8080
            app.cors.allowed-origins=https://kuad-archive.com
            app.cors.allowed-methods=GET,POST,PUT,DELETE
            app.cors.allowed-headers=*
            app.cors.max-age=3600
            EOL

      - name: Deploy Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 에러 발생 시 종료하지 않도록 설정
            set +e
            cd /home/ubuntu/app
            echo "Current working directory: $(pwd)"
            echo "Listing files in /home/ubuntu/app:"
            ls -l
            if pgrep -f "java -jar" > /dev/null; then
              echo "Found running java process, killing it..."
              pkill -f "java -jar" || :
              sleep 5
            fi
            echo "Running: java -jar /home/ubuntu/app/SOMA-0.0.1-SNAPSHOT.jar --spring.config.location=file:/home/ubuntu/app/application.properties"
            nohup java -jar /home/ubuntu/app/SOMA-0.0.1-SNAPSHOT.jar --spring.config.location=file:/home/ubuntu/app/application.properties > nohup.out 2>&1 &
            sleep 2
            echo "Application started"
            exit 0
